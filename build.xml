<?xml version="1.0"?>
<project name="Sudoku" default="info">
    <target name="info">
        <echo>Hello World - Sudoku!</echo>
    </target>
    <target name="echo">
        <echo>Echo Echo</echo>
    </target>
    <target name="build" depends="install,update,pylint,mypy,flake8,pydocstyle,documentation1,documentation2">
        <echo>Build</echo>
    </target>
    <target name="install">
        <exec executable="C:\Users\nickl\AppData\Local\Programs\Python\Python310\Scripts\poetry" failonerror="true"
              taskname="poetry">
            <arg value="install"/>
        </exec>
    </target>
    <target name="update">
        <exec executable="C:\Users\nickl\AppData\Local\Programs\Python\Python310\Scripts\poetry" failonerror="true"
              taskname="poetry">
            <arg value="update"/>
        </exec>
    </target>

    <target name="perflint">
        <exec executable="perflint" failonerror="true">
            <arg value="src"/>
            <arg value="--disable"/>
            <arg value="loop-global-usage,loop-invariant-statement"/>
            <arg value="--output"/>
            <arg value="output/perflint.html"/>
        </exec>
    </target>


    <target name="pytest" depends="pytest-src,pytest-acceptance">
        <echo>Pytest</echo>
    </target>


    <target name="pytest-acceptance">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <exec executable="pytest" failonerror="false" taskname="pytest">
            <arg value="tests/acceptance/run_acceptance_tests.py"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/acceptance.html"/>
        </exec>
    </target>

    <target name="pytest-src" depends="pytest-commands,pytest-glyphs,pytest-items,pytest-solver,pytest-utils">
        <echo>Pytest src</echo>
    </target>

    <target name="pytest-commands">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <exec executable="pytest" failonerror="false" taskname="pytest">
            <arg value="tests/commands"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/commands.html"/>
        </exec>
    </target>

    <target name="pytest-glyphs">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <exec executable="pytest" failonerror="false" taskname="pytest">
            <arg value="tests/glyphs"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/glyphs.html"/>
        </exec>
    </target>

    <target name="pytest-items">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <exec executable="pytest" failonerror="false" taskname="pytest">
            <arg value="tests/items"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/items.html"/>
        </exec>
    </target>

    <target name="pytest-solver">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <exec executable="pytest" failonerror="false" taskname="pytest">
            <arg value="tests/solver"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/solver.html"/>
        </exec>
    </target>


    <target name="pytest-utils">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <exec executable="pytest" failonerror="false" taskname="pytest">
            <arg value="tests/utils"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/utils.html"/>
        </exec>
    </target>

    <target name="pylint" depends="pylint.src,pylint.tests"/>

    <target name="pylint.src">
        <mkdir dir="output/pylint"/>
        <exec executable="pylint" failonerror="false" taskname="pylint.src" output="output/pylint/src.txt">
            <arg value="src"/>
        </exec>
    </target>

    <target name="pylint.tests">
        <mkdir dir="output/pylint"/>
        <exec executable="pylint" failonerror="false" taskname="pylint.tests" output="output/pylint/tests.txt">
            <arg value="tests"/>
        </exec>
    </target>
    <target name="mypy">
        <mkdir dir="output/mypy"/>
        <exec executable="mypy" failonerror="false" taskname="mypy">
            <arg value="--check-untyped-defs"/>
            <arg value="--namespace-packages"/>
            <arg value="--html-report"/>
            <arg value="output/mypy"/>
            <arg value="src"/>
        </exec>
    </target>
    <target name="documentation1">
        <mkdir dir="output/documentation1"/>
        <exec executable="pdoc" failonerror="false" taskname="pdoc">
            <arg value="-o"/>
            <arg value="output/documentation1"/>
            <arg value="src/"/>
        </exec>
    </target>
    <target name="documentation2">
        <mkdir dir="output/documentation2"/>
        <exec executable="sphinx-build" failonerror="false" taskname="sphinx-build">
            <arg value="source"/>
            <arg value="output/documentation2"/>
            <arg value="-b"/>
            <arg value="html"/>
        </exec>
    </target>
    <target name="flake8" depends="flake8.src,flake8.tests"/>
    <target name="flake8.src">
        <mkdir dir="output/flake8"/>
        <exec executable="flake8" failonerror="false" taskname="flake8" output="output/flake8/src.txt">
            <arg value="--max-line-length"/>
            <arg value="120"/>
            <arg value="src/"/>
        </exec>
    </target>
    <target name="flake8.tests">
        <mkdir dir="output/flake8"/>
        <exec executable="flake8" failonerror="false" taskname="flake8" output="output/flake8/tests.txt">
            <arg value="--max-line-length"/>
            <arg value="120"/>
            <arg value="src/"/>
        </exec>
    </target>
    <target name="pydocstyle" depends="pydocstyle.src,pydocstyle.tests"/>
    <target name="pydocstyle.src">
        <mkdir dir="output/pydocstyle"/>
        <exec executable="pydocstyle" failonerror="false" taskname="pydocstyle" output="output/pydocstyle/src.txt">
            <arg value="--ignore"/>
            <arg value="D100,D101,D102,D105,D107"/>
            <arg value="src/"/>
        </exec>
    </target>
    <target name="pydocstyle.tests">
        <mkdir dir="output/pydocstyle"/>
        <exec executable="pydocstyle" failonerror="false" taskname="pydocstyle" output="output/pydocstyle/tests.txt">
            <arg value="--ignore"/>
            <arg value="D100,D101,D102,D105,D107"/>
            <arg value="tests/"/>
        </exec>
    </target>
    <target name="convert-json-to-yaml">
        <mkdir dir="problems/fpuzzles/yaml"/>
        <exec executable="python.exe" failonerror="true" taskname="convert-json-to-yaml">
            <arg value="scripts/convert.py"/>
            <arg value="--source"/>
            <arg value="problems/fpuzzles/goodjson"/>
            <arg value="--destination"/>
            <arg value="problems/fpuzzles/yaml"/>
        </exec>
        <copy todir="problems/easy" overwrite="true">
            <fileset dir="problems/fpuzzles/yaml">
                <include name="**/*.yaml"/>
            </fileset>
        </copy>
    </target>
    <target name="convert-test">
        <mkdir dir="problems/fpuzzles/test"/>
        <exec executable="python.exe" failonerror="true" taskname="convert-json-to-yaml">
            <arg value="scripts/convert.py"/>
            <arg value="--source"/>
            <arg value="problems/fpuzzles/goodjson/yjryhuka.json"/>
            <arg value="--destination"/>
            <arg value="C:\Users\nickl\AppData\Roaming\JetBrains\PyCharm2022.3\scratches"/>
        </exec>
    </target>
</project>