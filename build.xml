<?xml version="1.0"?>
<project name="Sudoku" default="info">
    <target name="info">
        <echo>Hello World - Sudoku!</echo>
    </target>
    <target name="build" depends="install,update,pylint,mypy">
        <echo>Build</echo>
    </target>
    <target name="install">
        <exec executable="poetry" failonerror="true"
              taskname="poetry">
            <arg value="install"/>
        </exec>
    </target>
    <target name="update">
        <exec executable="poetry" failonerror="true"
              taskname="poetry">
            <arg value="update"/>
        </exec>
    </target>

    <target name="perflint">
        <exec executable="perflint" failonerror="true">
            <arg value="src"/>
            <arg value="--disable"/>
            <arg value="loop-global-usage,loop-invariant-statement"/>
            <arg value="--output"/>
            <arg value="output/perflint.html"/>
        </exec>
    </target>


    <target name="pytest" depends="pytest-unit-tests,pytest-acceptance-tests">
        <echo>Pytest</echo>
    </target>


    <target name="pytest-acceptance-tests">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <exec executable="pytest" failonerror="false" taskname="pytest-acceptance-tests">
            <arg value="tests/acceptance/run_acceptance_tests.py"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/acceptance-tests.html"/>
        </exec>
    </target>

    <target name="pytest-unit-tests">
        <mkdir dir="output/tests"/>
        <exec executable="pytest" failonerror="false" taskname="pytest-unit-tests">
            <arg value="tests"/>
            <arg value="--rootdir=src"/>
            <arg value="--html=output/tests/unit-tests.html"/>
        </exec>
    </target>

    <target name="pytest-commands">
        <mkdir dir="output/tests"/>
        <mkdir dir="output/lp"/>
        <mkdir dir="output/svg"/>
        <echo>${basedir}</echo>
        <exec executable="pytest" failonerror="false" taskname="pytest">
            <arg value="tests.unit"/>
            <arg value="--rootdir=./src"/>
            <arg value="--html=output/tests/commands.html"/>
        </exec>
    </target>

    <target name="pylint" depends="pylint.src, pylint.tests"/>

    <target name="pylint.src">
        <exec executable="pylint">
            <arg value="src"/>
        </exec>
    </target>

    <target name="pylint.tests">
        <exec executable="pylint">
            <arg value="tests"/>
        </exec>
    </target>

    <target name="mypy">
        <mkdir dir="output/mypy"/>
        <exec executable="mypy" failonerror="false" taskname="mypy">
            <arg value="--namespace-packages"/>
            <arg value="--html-report"/>
            <arg value="output/mypy"/>
            <arg value="src"/>
            <!--            <arg value="tests"/>-->
        </exec>
    </target>

    <target name="doc.src">
        <exec executable="pdoc" failonerror="false" taskname="pdoc">
            <arg value="--docformat"/>
            <arg value="google"/>
            <arg value="--include-undocumented"/>
            <arg value="--math"/>
            <arg value="--search"/>
            <arg value="--mermaid"/>
            <arg value="--output-dir"/>
            <arg value="output/docs"/>
            <arg value="src"/>
        </exec>
    </target>


    <target name="convert-json-to-yaml">
        <mkdir dir="problems/fpuzzles/yaml"/>
        <exec executable="python.exe" failonerror="true" taskname="convert-json-to-yaml">
            <arg value="scripts/convert.py"/>
            <arg value="--source"/>
            <arg value="problems/fpuzzles/goodjson"/>
            <arg value="--destination"/>
            <arg value="problems/fpuzzles/yaml"/>
        </exec>
        <copy todir="problems/easy" overwrite="true">
            <fileset dir="problems/fpuzzles/yaml">
                <include name="**/*.yaml"/>
            </fileset>
        </copy>
    </target>
    <target name="convert-test">
        <mkdir dir="problems/fpuzzles/test"/>
        <exec executable="python.exe" failonerror="true" taskname="convert-json-to-yaml">
            <arg value="scripts/convert.py"/>
            <arg value="--source"/>
            <arg value="problems/fpuzzles/goodjson/yjryhuka.json"/>
            <arg value="--destination"/>
            <arg value="C:\Users\nickl\AppData\Roaming\JetBrains\PyCharm2022.3\scratches"/>
        </exec>
    </target>

    <target name="static.code.analysis"
            depends="vulture, pydocstyle, radon, bandit, pylint, mypy, ruff"/>

    <target name="radon">
        <mkdir dir="output/radon"/>
        <exec executable="radon.exe" failonerror="true" output="output/radon/cc.txt">
            <arg value="cc"/>
            <arg value="src"/>
        </exec>
        <exec executable="radon.exe" failonerror="true" output="output/radon/mi.txt">
            <arg value="mi"/>
            <arg value="src"/>
        </exec>
    </target>

    <target name="bandit" depends="bandit.src,bandit.tests"/>

    <target name="bandit.src">
        <mkdir dir="output/bandit"/>
        <exec executable="bandit" failonerror="false" taskname="bandit" output="output/bandit/src.txt">
            <arg value="-r"/>
            <arg value="src/"/>
        </exec>
    </target>

    <target name="bandit.tests">
        <mkdir dir="output/bandit"/>
        <exec executable="bandit" failonerror="false" taskname="bandit" output="output/bandit/tests.txt">
            <arg value="-r"/>
            <arg value="tests/"/>
        </exec>
    </target>

    <target name="vulture">
        <mkdir dir="output/vulture"/>
        <exec executable="vulture" failonerror="false" taskname="vulture" output="output/vulture/vulture.txt">
            <arg value="src/"/>
            <arg value="tests/"/>
        </exec>
    </target>

    <target name="pydocstyle" depends="pydocstyle.src,pydocstyle.tests"/>

    <target name="pydocstyle.src">
        <mkdir dir="output/pydocstyle"/>
        <exec executable="pydocstyle" failonerror="false" taskname="pydocstyle" output="output/pydocstyle/src.txt">
            <arg value="src"/>
        </exec>
    </target>

    <target name="pydocstyle.tests">
        <mkdir dir="output/pydocstyle"/>
        <exec executable="pydocstyle" failonerror="false" taskname="pydocstyle" output="output/pydocstyle/tests.txt">
            <arg value="tests"/>
        </exec>
    </target>


    <target name="ruff" depends="ruff.src,ruff.tests"/>

    <target name="ruff.src">
        <mkdir dir="output/ruff"/>
        <exec executable="ruff" failonerror="false" taskname="ruff" output="output/ruff/src.txt">
            <arg value="check"/>
            <arg value="src/"/>
        </exec>
    </target>

    <target name="ruff.tests">
        <mkdir dir="output/ruff"/>
        <exec executable="ruff" failonerror="false" taskname="ruff" output="output/ruff/tests.txt">
            <arg value="check"/>
            <arg value="tests/items"/>
        </exec>
    </target>


    <target name="a">
        <mkdir dir="output/flake8/src/validators"/>
        <exec executable="flake8" failonerror="false" taskname="flake8">
            <arg value="--format=html"/>
            <arg value="--htmldir=output/flake8/src/validators"/>
            <arg value="src/validators"/>
        </exec>
    </target>


</project>