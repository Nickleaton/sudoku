from strictyaml import Map, Seq, Optional, Str, Regex

from src.parsers.cell_list_parser import CellListParser
from src.parsers.cell_pairs_parser import CellPairsParser
from src.parsers.cell_parser import CellParser
from src.parsers.cell_value_parser import CellValueParser
from src.parsers.digit_parser import DigitParser
from src.parsers.digits_parser import DigitsParser
from src.parsers.none_parser import NoneParser
from src.parsers.solution_parser import SolutionParser
problem_schema = Map({'Board': Map({'Board': Str(), Optional("Box"): Str(), Optional("Video"): Str(), Optional("Reference"): Str(), Optional("Author"): Str(), Optional("Title"): Str()}), 'Constraints': Map({Optional("Anti"): NoneParser(), Optional("AntiBLTR"): NoneParser(), Optional("AntiDiagonal"): NoneParser(), Optional("AntiKing"): NoneParser(), Optional("AntiKnight"): NoneParser(), Optional("AntiMonkey"): NoneParser(), Optional("AntiQueens"): DigitsParser(), Optional("AntiTLBR"): NoneParser(), Optional("Asterix"): NoneParser(), Optional("BLTR"): NoneParser(), Optional("Battenburg"): CellListParser(), Optional("BetweenLine"): Seq(CellListParser()), Optional("Box"): DigitParser(), Optional("Boxes"): NoneParser(), Optional("Cell"): NoneParser(), Optional("CellReference"): Seq(CellParser()), Optional("CenterProduct"): Seq(CellValueParser()), Optional("ClonedRegion"): NoneParser(), Optional("Column"): DigitParser(), Optional("ColumnIndexer"): DigitsParser(), Optional("Columns"): NoneParser(), Optional("ComposedItem"): NoneParser(), Optional("ConsecutivePair"): Seq(CellPairsParser()), Optional("Constraints"): NoneParser(), Optional("Diagonal"): NoneParser(), Optional("DifferenceLine"): Seq(CellListParser()), Optional("DifferencePair"): Seq(CellPairsParser()), Optional("DisjointGroup"): DigitParser(), Optional("DisjointGroups"): NoneParser(), Optional("DistinctRenbanLine"): Seq(CellListParser()), Optional("Indexer"): DigitsParser(), Optional("Item"): NoneParser(), Optional("LessThanEqualDifferencePair"): Seq(CellPairsParser()), Optional("Line"): Seq(CellListParser()), Optional("Pair"): Seq(CellPairsParser()), Optional("Product"): Seq(CellValueParser()), Optional("Region"): NoneParser(), Optional("RegionSet"): NoneParser(), Optional("RenbanLine"): Seq(CellListParser()), Optional("SpecialRegion"): NoneParser(), Optional("StandardDiagonal"): NoneParser(), Optional("StandardRegion"): NoneParser(), Optional("StandardRegionSet"): NoneParser()}), Optional("Solution"): Seq(SolutionParser())})