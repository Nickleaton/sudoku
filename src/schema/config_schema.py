"""ConfigSchema. Autogenerated."""

from strictyaml import Map, Optional, Seq, Str

from src.parsers.cell_pairs_parser import CellPairsParser
from src.parsers.cell_parser import CellParser
from src.parsers.cell_value_parser import CellValueParser
from src.parsers.digit_parser import DigitParser
from src.parsers.known_parser import KnownParser
from src.parsers.none_parser import NoneParser
from src.parsers.size_parser import SizeParser
from src.parsers.solution_parser import SolutionParser

problem_schema = Map(
    {
        'Board': Map(
            {
                'Size': SizeParser(),
                'Digits': Str(),
                Optional('Tags'): Map(
                    {
                        Optional('Title'): Str(),
                        Optional('Reference'): Str(),
                        Optional('Video'): Str(),
                        Optional('Author'): Str(),
                    }
                ),
            }
        ),
        'Constraints': Map(
            {
                Optional('Cell'): NoneParser(),
                Optional('Item'): NoneParser(),
                Optional('ComposedItem'): NoneParser(),
                Optional('Region'): NoneParser(),
                Optional('StandardRegion'): NoneParser(),
                Optional('Box'): DigitParser(),
                Optional('RegionSet'): NoneParser(),
                Optional('StandardRegionSet'): NoneParser(),
                Optional('Boxes'): SizeParser(),
                Optional('CellReference'): Seq(CellParser()),
                Optional('Column'): DigitParser(),
                Optional('Columns'): NoneParser(),
                Optional('Constraints'): NoneParser(),
                Optional('DisjointGroup'): DigitParser(),
                Optional('DisjointGroups'): NoneParser(),
                Optional('SimpleCellReference'): Seq(CellParser()),
                Optional('EvenCell'): Seq(CellParser()),
                Optional('FortressCell'): Seq(CellParser()),
                Optional('FortressGreaterThanCell'): Seq(CellParser()),
                Optional('FortressLessThanCell'): Seq(CellParser()),
                Optional('HighCell'): Seq(CellParser()),
                Optional('KnownCell'): Seq(CellParser()),
                Optional('LowCell'): Seq(CellParser()),
                Optional('MidCell'): Seq(CellParser()),
                Optional('OddCell'): Seq(CellParser()),
                Optional('Known'): Seq(KnownParser()),
                Optional('Product'): Seq(CellValueParser()),
                Optional('Row'): DigitParser(),
                Optional('Rows'): NoneParser(),
                Optional('SpecialRegion'): NoneParser(),
                Optional('UniqueRegion'): NoneParser(),
                Optional('Pair'): Seq(CellPairsParser()),
                Optional('VariablePair'): Seq(CellPairsParser()),
            }
        ),
        Optional('Solution'): Seq(SolutionParser()),
    }
)
